typedef enum {
  CENTRE_CONSOLE_EVENT_CAN_RX = 0,
  CENTRE_CONSOLE_EVENT_CAN_TX,
  CENTRE_CONSOLE_EVENT_CAN_FAULT,
  NUM_CENTRE_CONSOLE_EVENTS
} CentreConsoleEvent;

typedef enum {
  CENTRE_CONSOLE_POWER_EVENT_OFF = NUM_CENTRE_CONSOLE_EVENTS,
  CENTRE_CONSOLE_POWER_EVENT_ON,
  CENTRE_CONSOLE_POWER_EVENT_FAULT,
  CENTRE_CONSOLE_POWER_EVENT_PUBLISH_FAULT,
  CENTRE_CONSOLE_POWER_EVENT_FAULTS_CLEARED,
  CENTRE_CONSOLE_POWER_EVENT_CLEAR_FAULT,
  NUM_CENTRE_CONSOLE_POWER_EVENTS
} CentreConsolePowerEvent;

typedef enum {
  POWER_ON_SEQUENCE_EVENT_BEGIN = NUM_CENTRE_CONSOLE_POWER_EVENTS,
  POWER_ON_SEQUENCE_EVENT_NO_OP,
  POWER_ON_SEQUENCE_EVENT_FAULT,
  POWER_ON_SEQUENCE_EVENT_BATTERY_DRIVER_DISPLAY_ARE_ON,
  POWER_ON_SEQUENCE_EVENT_AUX_VOLTAGE_OK,
  POWER_ON_SEQUENCE_EVENT_BATTERY_HEALTH_OK,
  POWER_ON_SEQUENCE_EVENT_MOTOR_CONTROLLER_INTERFACE_IS_ON,
  POWER_ON_SEQUENCE_EVENT_BATTERY_RELAY_CLOSED,
  POWER_ON_SEQUENCE_EVENT_DC_DC_OK,
  POWER_ON_SEQUENCE_EVENT_PRECHARGE_COMPLETE,
  POWER_ON_SEQUENCE_EVENT_MOTOR_RELAY_CLOSED,
  POWER_ON_SEQUENCE_EVENT_RESET,
  POWER_ON_SEQUENCE_EVENT_COMPLETE, 
  NUM_POWER_ON_SEQUENCE_EVENTS // TODO: fix this
} PowerOnSequenceEvent;

typedef enum {
  BATTERY_HEARTBEAT_EVENT_HEALTH_CHECK_REQUEST = NUM_POWER_ON_SEQUENCE_EVENTS,
  NUM_BATTERY_HEARTBEAT_EVENTS
} BatteryHeartbeatEvent;

typedef enum {
  POWER_OFF_SEQUENCE_EVENT_BEGIN = NUM_POWER_ON_SEQUENCE_EVENTS,
  POWER_OFF_SEQUENCE_EVENT_COMPLETE,
  NUM_POWER_OFF_SEQUENCE_EVENTS
} PowerOffSequenceEvent;

typedef enum {
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_DRIVE = NUM_POWER_OFF_SEQUENCE_EVENTS,
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_REVERSE,
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_POWER,
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_NEUTRAL,
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_HAZARD,
  CENTRE_CONSOLE_BUTTON_PRESS_EVENT_EMERGENCY_STOP
} CentreConsoleButtonPressEvent;
